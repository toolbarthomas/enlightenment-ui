@import '../styles/mixins/visually-hidden';
@import '../styles/mixins/box-sizing';

@include boxSizing();

@mixin switchSize($size: --space-32, $offset: --space-6) {
  .switch__input-wrapper {
    height: var($size);
    border-radius: var($size);
    width: calc(var($size) * 2);
  }

  .switch__icon {
    width: calc(var($size) - var($offset));
    height: calc(var($size) - var($offset));
    left: calc(var($offset) / 2);
  }

  .switch__input:checked + .switch__icon,
  .switch--is-active .switch__icon {
    left: calc(var($offset) * 1.5);
    box-shadow: 0 calc(var($offset) / 2) 0 0 var(--accent-700);
  }

  &.switch--is-flipped {
    .switch__icon {
      left: auto;
      right: calc(var($offset) / 2);
    }

    .switch__input:checked + .switch__icon,
    &.switch--is-active .switch__icon {
      left: auto;
      right: calc(var($offset) * 1.5);
    }
  }
}

.switch {
  position: relative;

  &__label {
    display: flex;
    align-items: center;
    padding: var(--space-8) 0;
    column-gap: var(--space-12);
  }

  &__body {
    display: block;
    flex-grow: 1;
    user-select: none;

    .switch--is-rtl & {
      order: -1;
    }
  }

  &__input-wrapper {
    flex-shrink: 0;
    position: relative;
    display: block;
    // height: var(--space-32);
    background-color: var(--neutral-600);
    // width: var(--space-64);
    transition: var(--duration-default) var(--easing-default);
    transition-property: background-color;
    box-shadow: inset 0 var(--space-1) var(--space-2) var(--dawn-900-a20);
    cursor: pointer;

    .switch--is-disabled & {
      cursor: not-allowed;
      opacity: 0.5;
    }

    :host([mode='dark']) & {
      background-color: var(--neutral-800);
      box-shadow: none;
    }

    .switch--is-active &,
    :host([mode='dark']) .switch--is-active & {
      background-color: var(--accent-600);
    }
  }

  &__icon {
    position: absolute;
    // width: calc(var(--space-32) - var(--space-6));
    // height: calc(var(--space-32) - var(--space-6));
    top: 50%;
    // left: calc(var(--space-6) / 2);
    transform: translate(0, -50%);
    border-radius: 50%;
    background: var(--neutral-100);
    transition: var(--duration-default) var(--easing-default);
    transition-property: background-color border-color left right transform;
    box-shadow: var(--space-0) var(--space-1) var(--space-1) var(--dawn-900-a20);
    border: solid var(--space-1) var(--neutral-700-a60);

    .switch--is-disabled & {
      background: var(--neutral-600);
    }

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      display: block;
      border-radius: 50%;
      content: ' ';
      opacity: 0;
      transition: inherit;
      transition-property: opacity;
      background: repeating-linear-gradient(0deg, transparent, white);
    }

    :host([mode='dark']) & {
      box-shadow: none;
      border-color: transparent;
      background: var(--neutral-700);

      &::before {
        opacity: 0.2;
      }
    }

    .switch__input:checked + &,
    .switch--is-active & {
      // left: calc(var(--space-6) * 1.5);
      transform: translate(100%, -50%);
      border-color: transparent;
      background-color: var(--accent-100);

      &::before {
        opacity: 1;
      }
    }

    .switch--is-flipped .switch__input:checked + &,
    .switch--is-flipped.switch--is-active & {
      transform: translate(-100%, -50%);
    }

    :host([mode='dark']) .switch__input:checked + &,
    :host([mode='dark']) .switch--is-active & {
      background-color: var(--accent-300);
    }
  }

  &__input {
    @include visuallyHidden();

    &:focus {
      outline: none;
    }
  }

  &__focus-indicator {
    position: absolute;
    top: calc(var(--space-0) - var(--space-4));
    right: calc(var(--space-0) - var(--space-4));
    left: calc(var(--space-0) - var(--space-4));
    bottom: calc(var(--space-0) - var(--space-4));

    display: block;
    pointer-events: none;
    border-radius: inherit;
    border: solid var(--space-4) var(--accent-600);
    opacity: 0;
    transition: var(--duration-default) var(--easing-default);
    transition-property: opacity transform;
    transform: scale(0.8);

    .switch__input:focus-visible ~ & {
      opacity: 0.6;
      transform: none;

      :host([mode='dark']) & {
        opacity: 0.8;
      }
    }
  }

  @include switchSize(--space-24, --space-4);

  &--is-small {
    @include switchSize(--space-16, --space-2);
  }

  &--is-large {
    @include switchSize(--space-32, --space-6);
  }
}
